service: sam2sls-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}

  # NOMBRE EXPLÍCITO para ver tu API en API Gateway (HTTP)
  httpApi:
    name: sam2sls-${self:provider.stage}-httpapi

  # Variables de entorno dinámicas (tabla de DB)
  environment:
    TABLE_NAME: ${cf:sam2sls-db-${self:provider.stage}.AppTableName}

  # Conexión a la VPC aislada (subredes privadas + SG)
  vpc:
    securityGroupIds:
      - ${cf:sam2sls-vpc-${self:provider.stage}.SecurityGroupId}
    subnetIds:
      - ${cf:sam2sls-vpc-${self:provider.stage}.PrivateSubnet1Id}
      - ${cf:sam2sls-vpc-${self:provider.stage}.PrivateSubnet2Id}

  # Trazas y logs
  tracing:
    apiGateway: true
    lambda: true
  logs:
    httpApi: true

  # Etiquetas útiles (opcional)
  tags:
    Project: sam2sls
    Stage: ${self:provider.stage}
    Service: ${self:service}

  # Permisos mínimos (DynamoDB + X-Ray)
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/${env:TABLE_NAME}
        - Effect: Allow
          Action:
            - xray:PutTraceSegments
            - xray:PutTelemetryRecords
          Resource: "*"

package:
  individually: true
  patterns:
    - '!**/*'
    - 'handler.js'

functions:
  createItem:
    handler: handler.createItem
    memorySize: 256
    timeout: 10
    events:
      - httpApi: { method: POST, path: /items, cors: true }

  getItem:
    handler: handler.getItem
    memorySize: 256
    timeout: 10
    events:
      - httpApi: { method: GET, path: /items/{id}, cors: true }

  updateItem:
    handler: handler.updateItem
    memorySize: 256
    timeout: 10
    events:
      - httpApi: { method: PUT, path: /items/{id}, cors: true }

  deleteItem:
    handler: handler.deleteItem
    memorySize: 256
    timeout: 10
    events:
      - httpApi: { method: DELETE, path: /items/{id}, cors: true }

  listItems:
    handler: handler.listItems
    memorySize: 256
    timeout: 10
    events:
      - httpApi: { method: GET, path: /items, cors: true }


